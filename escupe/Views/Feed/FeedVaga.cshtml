@model escupe.ViewModels.FeedVagaViewModel
<link rel="stylesheet" href="~/css/style.css" />
<link rel="stylesheet" href="~/css/vagas.css" />


<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <title>Esculp - Vagas</title>
    <link rel="icon" href="@Url.Content("~/imagens/favicon.ico")" type="image/x-icon">
    <link rel="stylesheet" href="@Url.Content("~/css/vagas.css")">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://api.fontshare.com/v2/css?f[]=satoshi@400,500,700,900&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,700;1,14..32,700&display=swap" rel="stylesheet" />
</head>
<body>
    <!-- Conteúdo da página -->
    <header class="site-header">
        <a href="@Url.Action("ProcurarVagas", "Feed")" class="icone-container">
            <img src="@Url.Content("~/imagens/icone.png")" alt="Logo do Site" class="site-logo">
            <span class="site-nome">Esculp</span>
        </a>

        <a href="@Url.Action("EditarEstudante", "Perfil")" class="icone-perfil" title="Perfil">
            <svg xmlns="http://www.w3.org/2000/svg" class="perfil-icon" viewBox="0 0 24 24" width="28" height="28">
                <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4
        1.79-4 4 1.79 4 4 4zm0 2c-2.67
        0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z" />
            </svg>
        </a>
    </header>

    <div class="search-bar">
        <input id="vaga" type="text" placeholder="Procure por cargo, vaga ou setor">
        <input id="localizacao" type="text" placeholder="Cidade, estado ou 'remoto'">
    </div>

  <div class="vagas-lista">
    @for (int i = 0; i < Model.Vagas.Count; i++)
    {
        var vaga = Model.Vagas[i];
        <div class="vaga-row" id="vaga-row-@i">
<div class="card-vaga" onclick="mostrarDetalhes(@i)">
                <h3>@vaga.Titulo</h3>
                <span>@vaga.EmpresaId</span>
                <p>@vaga.Descricao</p>
            </div>
            <div class="vaga-detalhes" id="detalhes-vaga-@i" style="display:none;">
                <!-- O conteúdo será preenchido via JS -->
            </div>
        </div>
    }
</div>

    <footer>
        <p><strong>Contato:</strong> EmpresaEsculp@gmail.com</p>
        <p><strong>Busque por:</strong> Empresas, Vagas, Oportunidade</p>
        <strong>Copyright © 2025. Esculp LLC. “Esculp” o logotipo do Esculp são marcas comerciais pertencentes à Esculp LLC.</strong>
    </footer>script src="@Url.Content("~/js/vagas.js")"></script>
</body>
</html>


<script>
    const vagas = [
    @for (int i = 0; i < Model.Vagas.Count; i++)
    {
        var vaga = Model.Vagas[i];
        <text>
            {
                titulo: "@vaga.Titulo",
                empresa: "@vaga.EmpresaId",
                descricao: `
                            <div class="btn-detalhes">
                                <button class="btn-apply">Candidatar-se</button>
                            </div>
                            <section class="details">
                                <h4>📄 Descrição da vaga</h4>
                                <p>@vaga.Descricao</p>
                            </section>
                            <section class="details">
                                <h4>🧭 Localização</h4>
                                <p>@vaga.Localizacao</p>
                            </section>
                            <section class="details">
                                <h4>💰 Salário</h4>
                                <p>@vaga.Salario.ToString("C")</p>
                            </section>
                            <section class="details">
                                <h4>🎁 Benefícios</h4>
                                <p>@vaga.Beneficios</p>
                            </section>
                            <section class="details">
                                <h4>📅 Publicação</h4>
                                <p>@vaga.DataPublicacao.ToString("dd/MM/yyyy")</p>
                            </section>
                        `
            }@(i < Model.Vagas.Count - 1 ? "," : "")
        </text>
    }
        ];

    function mostrarDetalhes(index) {
        const container = document.getElementById("detalhes-vaga");
        container.innerHTML = vagas[index].descricao;
    }
</script>

<script>
    const detalhesVagas = [
    @for (int i = 0; i < (Model.Vagas?.Count ?? 0); i++)
    {
        var vaga = Model.Vagas[i];
        @Html.Raw(
                 "@\"<h2>" + vaga.Titulo + "</h2>" +
                 "<h4>" + vaga.EmpresaId + "</h4>" +
                 "<p>" + vaga.Descricao + "</p>" +
                 "<p><strong>Localização:</strong> " + vaga.Localizacao + "</p>" +
                 "<p><strong>Salário:</strong> " + vaga.Salario.ToString("C") + "</p>" +
                 "<button class='btn-apply'>Candidatar-se</button>\"" +
                 (i < Model.Vagas.Count - 1 ? "," : "")
                 )
    }
        ];
</script>