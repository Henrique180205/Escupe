@model escupe.ViewModels.FeedVagaViewModel

<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="utf-8" />
    <title>Esculp - Vagas</title>
    <link rel="icon" href="~/imagens/favicon.ico" type="image/x-icon" />
    <link rel="stylesheet" href="~/css/vagas.css" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link href="https://api.fontshare.com/v2/css?f[]=satoshi@400,500,700,900&display=swap" rel="stylesheet" />
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet" />
   
</head>
<body>

    <header class="site-header">
        <a href="@Url.Action("Index", "Vaga")" class="icone-container">
            <img src="~/imagens/icone.png" alt="Logo do Site" class="site-logo" />
            <span class="site-nome">Esculp</span>
        </a>
        <a href="@Url.Action("Editar", "Estudante")" class="icone-perfil" title="Perfil">
            <svg xmlns="http://www.w3.org/2000/svg" class="perfil-icon" viewBox="0 0 24 24" width="28" height="28">
                <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4
        1.79-4 4 1.79 4 4 4zm0 2c-2.67
        0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z" />
            </svg>
        </a>
    </header>

    <div class="search-bar">
        <input type="text" placeholder="Procure por cargo, vaga ou setor" />
        <input type="text" placeholder="Cidade, estado ou 'remoto'" />
    </div>

    <main>
        <div id="vagas" class="vagas-lista">
            @for (int i = 0; i < Model.Vagas.Count; i++)
            {
                var vaga = Model.Vagas[i];
                <div class="card" onclick="mostrarDetalhes(@i)">
                    <div class="card-top">
                        <h3>@vaga.Titulo</h3>
                        <span>@vaga.NomeFantasia</span>
                    </div>
                    <div class="tags">
                        <div class="tag">@vaga.Localizacao</div>
                        <div class="tag">@vaga.Setor</div>
                        <div class="tag">@vaga.DataPublicacao.ToString("MMMM yyyy")</div>
                    </div>
                    <p>@vaga.Descricao</p>
                    <div class="card-footer">
                        <span>Postado @vaga.DataPublicacao dias atrás</span>
                        <span class="salario">R$ @vaga.Salario.ToString("N2")</span>
                    </div>
                </div>
            }
        </div>

        <div id="detalhes-vaga" class="vaga-detalhes">
            <p class="placeholder">Clique em uma vaga para ver os detalhes</p>
        </div>

        <div id="formModal" class="modal">
            <div class="modal-content">
                <span class="close" id="closeModalBtn">&times;</span>
                <h2>Informações do Candidato</h2>
                <form>
                    <label>Email:</label>
                    <input type="email" required />
                    <label>Telefone:</label>
                    <input type="tel" required />
                    <label>Currículo (PDF):</label>
                    <input type="file" accept=".pdf" required />
                    <label>Breve descrição sobre você:</label>
                    <textarea rows="5" required></textarea>
                    <button type="submit" class="submit-btn">Enviar</button>
                </form>
            </div>
        </div>
    </main>

    <footer>
        <p><strong>Contato:</strong> EmpresaEsculp@gmail.com</p>
        <p><strong>Busque por:</strong> Empresas, Vagas, Oportunidade</p>
        <strong>Copyright © 2025. Esculp LLC. “Esculp” e seu logotipo são marcas registradas.</strong>
    </footer>
    <script src="~/js/vagas.js"></script>
    <script>
        const vagas = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));

        function mostrarDetalhes(index) {
            const cards = document.querySelectorAll(".card");
            const isMobile = window.innerWidth <= 768;
            const card = cards[index];
            const container = document.getElementById("detalhes-vaga");

            const detalhesAntigos = document.querySelector(".detalhes-inseridos");
            if (detalhesAntigos) detalhesAntigos.remove();

            const vaga = vagas[index];
            const novo = document.createElement("div");
            novo.className = "detalhes-inseridos";
            novo.innerHTML = `
                <section class="details">
                  <h4>📄 Descrição da vaga</h4>
                  <p>${vaga.DescricaoCompleta || "Informações completas indisponíveis no momento."}</p>
                </section>
                <div class="botoes-acao">
                  <button class="btn-candidatar">Candidatar-se</button>
                  <button class="btn-salvar">Salvar vaga</button>
                </div>`;

            if (isMobile) {
                card.insertAdjacentElement("afterend", novo);
            } else {
                container.innerHTML = novo.innerHTML;
            }

            setTimeout(() => {
                const btn = document.querySelector(".btn-candidatar");
                if (btn) {
                    btn.addEventListener("click", () => {
                        document.getElementById("formModal").style.display = "block";
                    });
                }
            }, 0);
        }

        document.addEventListener("DOMContentLoaded", () => {
            const modal = document.getElementById("formModal");
            const close = document.getElementById("closeModalBtn");
            const form = document.querySelector("form");

            close.addEventListener("click", () => modal.style.display = "none");
            window.addEventListener("click", e => {
                if (e.target === modal) modal.style.display = "none";
            });

            form.addEventListener("submit", e => {
                e.preventDefault();
                const msg = document.createElement("div");
                msg.className = "confirmation";
                msg.textContent = "✔ Formulário enviado com sucesso!";
                form.appendChild(msg);
                form.reset();
                setTimeout(() => {
                    modal.style.display = "none";
                    msg.remove();
                }, 3000);
            });
        });

        window.addEventListener("resize", () => {
            if (window.innerWidth > 768) {
                const detalheMobile = document.querySelector(".detalhes-inseridos");
                if (detalheMobile) detalheMobile.remove();
            }
        });
    </script>

    <style>
        /* Insira aqui seu CSS moderno ou importe de um arquivo externo */
        body {
            font-family: 'Inter', sans-serif;
            margin: 0;
            padding: 0;
        }

        .card {
            background: #f7f7f7;
            border-radius: 12px;
            padding: 16px;
            margin-bottom: 16px;
            cursor: pointer;
            box-shadow: 0 0 4px rgba(0,0,0,0.1);
        }

            .card:hover {
                background: #ebebeb;
            }

        .card-top h3 {
            margin: 0;
            font-size: 1.1em;
        }

        .tags {
            margin: 10px 0;
        }

        .tag {
            display: inline-block;
            background: #e0e0e0;
            padding: 4px 8px;
            margin-right: 6px;
            border-radius: 20px;
            font-size: 0.85em;
        }

        .card-footer {
            display: flex;
            justify-content: space-between;
            font-size: 0.9em;
            color: #555;
        }

        .vaga-detalhes {
            background: #fff;
            padding: 20px;
        }

        .btn-candidatar, .btn-salvar {
            padding: 10px 20px;
            border-radius: 20px;
            border: none;
            font-weight: bold;
            cursor: pointer;
        }

        .btn-candidatar {
            background: #007bff;
            color: white;
            margin-right: 10px;
        }

        .btn-salvar {
            background: #333;
            color: white;
        }

        .modal {
            display: none;
            position: fixed;
            z-index: 10;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow-y: auto;
            background-color: rgba(0,0,0,0.5);
        }

        .modal-content {
            background: white;
            margin: 5% auto;
            padding: 20px;
            border-radius: 8px;
            max-width: 500px;
            max-height: 90vh;
            overflow-y: auto;
        }

            .modal-content input,
            .modal-content textarea {
                width: 100%;
                margin: 8px 0;
                padding: 10px;
                border-radius: 5px;
                border: 1px solid #ccc;
            }

        .submit-btn {
            background: black;
            color: white;
            padding: 10px 20px;
            border-radius: 30px;
            border: none;
            font-weight: bold;
            cursor: pointer;
        }

        .confirmation {
            margin-top: 12px;
            background: #2b74f8;
            color: white;
            padding: 10px;
            border-radius: 6px;
            text-align: center;
        }

        footer {
            text-align: center;
            padding: 20px;
            font-size: 0.85em;
            color: #666;
        }
    </style>
</body>
</html>